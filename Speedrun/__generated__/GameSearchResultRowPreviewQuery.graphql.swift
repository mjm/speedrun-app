// Auto-generated by relay-compiler. Do not edit.

import Relay

struct GameSearchResultRowPreviewQuery {
    var variables: Variables

    init(variables: Variables) {
        self.variables = variables
    }

    static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "GameSearchResultRowPreviewQuery",
                type: "Query",
                selections: [
                    .field(ReaderLinkedField(
                        name: "game",
                        args: [
                            VariableArgument(name: "id", variableName: "id")
                        ],
                        concreteType: "Game",
                        plural: false,
                        selections: [
                            .fragmentSpread(ReaderFragmentSpread(
                                name: "GameSearchResultRow_game"
                            ))
                        ]
                    ))
                ]),
            operation: NormalizationOperation(
                name: "GameSearchResultRowPreviewQuery",
                selections: [
                    .field(NormalizationLinkedField(
                        name: "game",
                        args: [
                            VariableArgument(name: "id", variableName: "id")
                        ],
                        concreteType: "Game",
                        plural: false,
                        selections: [
                            .field(NormalizationScalarField(
                                name: "name"
                            )),
                            .field(NormalizationLinkedField(
                                name: "asset",
                                alias: "cover",
                                args: [
                                    LiteralArgument(name: "kind", value: "COVER_MEDIUM")
                                ],
                                storageKey: "asset(kind:\"COVER_MEDIUM\")",
                                concreteType: "GameAsset",
                                plural: false,
                                selections: [
                                    .field(NormalizationScalarField(
                                        name: "uri"
                                    ))
                                ]
                            )),
                            .field(NormalizationScalarField(
                                name: "id"
                            ))
                        ]
                    ))
                ]),
            params: RequestParameters(
                name: "GameSearchResultRowPreviewQuery",
                operationKind: .query,
                text: """
query GameSearchResultRowPreviewQuery(
  $id: ID!
) {
  game(id: $id) {
    ...GameSearchResultRow_game
    id
  }
}

fragment GameSearchResultRow_game on Game {
  name
  cover: asset(kind: COVER_MEDIUM) {
    uri
  }
}
"""))
    }
}


extension GameSearchResultRowPreviewQuery {
    struct Variables: VariableDataConvertible {
        var id: String

        var variableData: VariableData {
            [
                "id": id,
            ]
        }
    }

    init(id: String) {
        self.init(variables: .init(id: id))
    }
}

#if canImport(RelaySwiftUI)

import RelaySwiftUI

@available(iOS 14.0, macOS 10.16, tvOS 14.0, watchOS 7.0, *)
extension RelaySwiftUI.QueryNext.WrappedValue where O == GameSearchResultRowPreviewQuery {
    func get(id: String) -> RelaySwiftUI.QueryNext<GameSearchResultRowPreviewQuery>.Result {
        self.get(.init(id: id))
    }
}

#endif

extension GameSearchResultRowPreviewQuery {
    struct Data: Decodable {
        var game: Game_game?

        struct Game_game: Decodable, GameSearchResultRow_game_Key {
            var fragment_GameSearchResultRow_game: FragmentPointer
        }
    }
}

extension GameSearchResultRowPreviewQuery: Relay.Operation {}
