// Auto-generated by relay-compiler. Do not edit.

import Relay

struct LeaderboardRunPreviewQuery {
    var variables: Variables

    init(variables: Variables) {
        self.variables = variables
    }

    static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "LeaderboardRunPreviewQuery",
                type: "Query",
                selections: [
                    .field(ReaderLinkedField(
                        name: "viewer",
                        concreteType: "Viewer",
                        plural: false,
                        selections: [
                            .field(ReaderLinkedField(
                                name: "leaderboard",
                                args: [
                                    LiteralArgument(name: "category", value: "bar"),
                                    LiteralArgument(name: "game", value: "foo")
                                ],
                                concreteType: "Leaderboard",
                                plural: false,
                                selections: [
                                    .field(ReaderLinkedField(
                                        name: "runs",
                                        concreteType: "PlacedRun",
                                        plural: true,
                                        selections: [
                                            .field(ReaderLinkedField(
                                                name: "run",
                                                concreteType: "Run",
                                                plural: false,
                                                selections: [
                                                    .field(ReaderScalarField(
                                                        name: "id"
                                                    ))
                                                ]
                                            )),
                                            .fragmentSpread(ReaderFragmentSpread(
                                                name: "LeaderboardRun_run"
                                            ))
                                        ]
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]),
            operation: NormalizationOperation(
                name: "LeaderboardRunPreviewQuery",
                selections: [
                    .field(NormalizationLinkedField(
                        name: "viewer",
                        concreteType: "Viewer",
                        plural: false,
                        selections: [
                            .field(NormalizationLinkedField(
                                name: "leaderboard",
                                args: [
                                    LiteralArgument(name: "category", value: "bar"),
                                    LiteralArgument(name: "game", value: "foo")
                                ],
                                storageKey: "leaderboard(category:\"bar\",game:\"foo\")",
                                concreteType: "Leaderboard",
                                plural: false,
                                selections: [
                                    .field(NormalizationLinkedField(
                                        name: "runs",
                                        concreteType: "PlacedRun",
                                        plural: true,
                                        selections: [
                                            .field(NormalizationLinkedField(
                                                name: "run",
                                                concreteType: "Run",
                                                plural: false,
                                                selections: [
                                                    .field(NormalizationScalarField(
                                                        name: "id"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "comment"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "time"
                                                    )),
                                                    .field(NormalizationLinkedField(
                                                        name: "players",
                                                        plural: true,
                                                        selections: [
                                                            .field(NormalizationScalarField(
                                                                name: "__typename"
                                                            )),
                                                            .inlineFragment(NormalizationInlineFragment(
                                                                type: "UserRunPlayer",
                                                                selections: [
                                                                    .field(NormalizationLinkedField(
                                                                        name: "user",
                                                                        concreteType: "User",
                                                                        plural: false,
                                                                        selections: [
                                                                            .field(NormalizationScalarField(
                                                                                name: "name"
                                                                            )),
                                                                            .field(NormalizationScalarField(
                                                                                name: "id"
                                                                            ))
                                                                        ]
                                                                    ))
                                                                ]
                                                            )),
                                                            .inlineFragment(NormalizationInlineFragment(
                                                                type: "GuestRunPlayer",
                                                                selections: [
                                                                    .field(NormalizationScalarField(
                                                                        name: "name"
                                                                    ))
                                                                ]
                                                            ))
                                                        ]
                                                    ))
                                                ]
                                            )),
                                            .field(NormalizationScalarField(
                                                name: "place"
                                            ))
                                        ]
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]),
            params: RequestParameters(
                name: "LeaderboardRunPreviewQuery",
                operationKind: .query,
                text: """
query LeaderboardRunPreviewQuery {
  viewer {
    leaderboard(game: "foo", category: "bar") {
      runs {
        run {
          id
        }
        ...LeaderboardRun_run
      }
    }
  }
}

fragment LeaderboardRun_run on PlacedRun {
  place
  run {
    id
    comment
    time
    players {
      __typename
      ... on UserRunPlayer {
        user {
          name
          id
        }
      }
      ... on GuestRunPlayer {
        name
      }
    }
  }
}
"""))
    }
}


extension LeaderboardRunPreviewQuery {
    typealias Variables = EmptyVariables
}

extension LeaderboardRunPreviewQuery {
    struct Data: Readable {
        var viewer: Viewer_viewer?

        init(from data: SelectorData) {
            viewer = data.get(Viewer_viewer?.self, "viewer")
        }

        struct Viewer_viewer: Readable {
            var leaderboard: Leaderboard_leaderboard?

            init(from data: SelectorData) {
                leaderboard = data.get(Leaderboard_leaderboard?.self, "leaderboard")
            }

            struct Leaderboard_leaderboard: Readable {
                var runs: [PlacedRun_runs]

                init(from data: SelectorData) {
                    runs = data.get([PlacedRun_runs].self, "runs")
                }

                struct PlacedRun_runs: Readable, LeaderboardRun_run_Key {
                    var run: Run_run
                    var fragment_LeaderboardRun_run: FragmentPointer

                    init(from data: SelectorData) {
                        run = data.get(Run_run.self, "run")
                        fragment_LeaderboardRun_run = data.get(fragment: "LeaderboardRun_run")
                    }

                    struct Run_run: Readable {
                        var id: String

                        init(from data: SelectorData) {
                            id = data.get(String.self, "id")
                        }
                    }
                }
            }
        }
    }
}

extension LeaderboardRunPreviewQuery: Relay.Operation {}
