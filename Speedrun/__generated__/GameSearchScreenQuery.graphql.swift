// Auto-generated by relay-compiler. Do not edit.

import Relay

struct GameSearchScreenQuery {
    var variables: Variables

    init(variables: Variables) {
        self.variables = variables
    }

    static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "GameSearchScreenQuery",
                selections: [
                    .field(ReaderLinkedField(
                        name: "viewer",
                        concreteType: "Viewer",
                        plural: false,
                        selections: [
                            .field(ReaderLinkedField(
                                name: "games",
                                args: [

                                ],
                                concreteType: "GameConnection",
                                plural: false,
                                selections: [
                                    .field(ReaderLinkedField(
                                        name: "edges",
                                        concreteType: "GameEdge",
                                        plural: true,
                                        selections: [
                                            .field(ReaderLinkedField(
                                                name: "node",
                                                concreteType: "Game",
                                                plural: false,
                                                selections: [
                                                    .field(ReaderScalarField(
                                                        name: "id"
                                                    )),
                                                    .field(ReaderScalarField(
                                                        name: "name"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]),
            operation: NormalizationOperation(
                name: "GameSearchScreenQuery",
                selections: [
                    .field(NormalizationLinkedField(
                        name: "viewer",
                        concreteType: "Viewer",
                        plural: false,
                        selections: [
                            .field(NormalizationLinkedField(
                                name: "games",
                                args: [

                                ],
                                concreteType: "GameConnection",
                                plural: false,
                                selections: [
                                    .field(NormalizationLinkedField(
                                        name: "edges",
                                        concreteType: "GameEdge",
                                        plural: true,
                                        selections: [
                                            .field(NormalizationLinkedField(
                                                name: "node",
                                                concreteType: "Game",
                                                plural: false,
                                                selections: [
                                                    .field(NormalizationScalarField(
                                                        name: "id"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "name"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]),
            params: RequestParameters(
                name: "GameSearchScreenQuery",
                operationKind: .query,
                text: """
query GameSearchScreenQuery(
  $query: String!
) {
  viewer {
    games(filter: {name: $query}) {
      edges {
        node {
          id
          name
        }
      }
    }
  }
}
"""))
    }
}


extension GameSearchScreenQuery {
    struct Variables: VariableDataConvertible {
        var query: String

        var variableData: VariableData {
            [
                "query": query,
            ]
        }
    }
}

extension GameSearchScreenQuery {
    struct Data: Readable {
        var viewer: Viewer_viewer?

        init(from data: SelectorData) {
            viewer = data.get(Viewer_viewer?.self, "viewer")
        }

        struct Viewer_viewer: Readable {
            var games: GameConnection_games

            init(from data: SelectorData) {
                games = data.get(GameConnection_games.self, "games")
            }

            struct GameConnection_games: Readable {
                var edges: [GameEdge_edges]

                init(from data: SelectorData) {
                    edges = data.get([GameEdge_edges].self, "edges")
                }

                struct GameEdge_edges: Readable {
                    var node: Game_node

                    init(from data: SelectorData) {
                        node = data.get(Game_node.self, "node")
                    }

                    struct Game_node: Readable {
                        var id: String
                        var name: String?

                        init(from data: SelectorData) {
                            id = data.get(String.self, "id")
                            name = data.get(String?.self, "name")
                        }
                    }
                }
            }
        }
    }
}

extension GameSearchScreenQuery: Relay.Operation {}
