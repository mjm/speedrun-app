// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct LeaderboardHeader_game {
    public var fragmentPointer: FragmentPointer

    public init(key: LeaderboardHeader_game_Key) {
        fragmentPointer = key.fragment_LeaderboardHeader_game
    }

    public static var node: ReaderFragment {
        ReaderFragment(
            name: "LeaderboardHeader_game",
            type: "Game",
            selections: [
                .field(ReaderScalarField(
                    name: "name"
                )),
                .field(ReaderLinkedField(
                    name: "asset",
                    alias: "cover",
                    storageKey: "asset(kind:\"COVER_MEDIUM\")",
                    args: [
                        LiteralArgument(name: "kind", value: "COVER_MEDIUM")
                    ],
                    concreteType: "GameAsset",
                    plural: false,
                    selections: [
                        .field(ReaderScalarField(
                            name: "uri"
                        ))
                    ]
                ))
            ]
        )
    }
}

extension LeaderboardHeader_game {
    public struct Data: Decodable {
        public var name: String?
        public var cover: GameAsset_cover?

        public struct GameAsset_cover: Decodable {
            public var uri: String
        }
    }
}

public protocol LeaderboardHeader_game_Key {
    var fragment_LeaderboardHeader_game: FragmentPointer { get }
}

extension LeaderboardHeader_game: Relay.Fragment {}

#if swift(>=5.3) && canImport(RelaySwiftUI)
import RelaySwiftUI

extension LeaderboardHeader_game_Key {
    @available(iOS 14.0, macOS 10.16, tvOS 14.0, watchOS 7.0, *)
    public func asFragment() -> RelaySwiftUI.FragmentNext<LeaderboardHeader_game> {
        RelaySwiftUI.FragmentNext<LeaderboardHeader_game>(self)
    }
}
#endif