// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct LeaderboardHeaderPreviewQuery {
    public var variables: Variables

    public init(variables: Variables) {
        self.variables = variables
    }

    public static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "LeaderboardHeaderPreviewQuery",
                type: "Query",
                selections: [
                    .field(ReaderLinkedField(
                        name: "game",
                        storageKey: "game(id:\"foo\")",
                        args: [
                            LiteralArgument(name: "id", value: "foo")
                        ],
                        concreteType: "Game",
                        plural: false,
                        selections: [
                            .fragmentSpread(ReaderFragmentSpread(
                                name: "LeaderboardHeader_game"
                            ))
                        ]
                    )),
                    .field(ReaderLinkedField(
                        name: "node",
                        alias: "category",
                        storageKey: "node(id:\"bar\")",
                        args: [
                            LiteralArgument(name: "id", value: "bar")
                        ],
                        plural: false,
                        selections: [
                            .fragmentSpread(ReaderFragmentSpread(
                                name: "LeaderboardHeader_category"
                            ))
                        ]
                    ))
                ]
            ),
            operation: NormalizationOperation(
                name: "LeaderboardHeaderPreviewQuery",
                selections: [
                    .field(NormalizationLinkedField(
                        name: "game",
                        args: [
                            LiteralArgument(name: "id", value: "foo")
                        ],
                        storageKey: "game(id:\"foo\")",
                        concreteType: "Game",
                        plural: false,
                        selections: [
                            .field(NormalizationScalarField(
                                name: "name"
                            )),
                            .field(NormalizationLinkedField(
                                name: "asset",
                                alias: "cover",
                                args: [
                                    LiteralArgument(name: "kind", value: "COVER_MEDIUM")
                                ],
                                storageKey: "asset(kind:\"COVER_MEDIUM\")",
                                concreteType: "GameAsset",
                                plural: false,
                                selections: [
                                    .field(NormalizationScalarField(
                                        name: "uri"
                                    ))
                                ]
                            )),
                            .field(NormalizationScalarField(
                                name: "id"
                            ))
                        ]
                    )),
                    .field(NormalizationLinkedField(
                        name: "node",
                        alias: "category",
                        args: [
                            LiteralArgument(name: "id", value: "bar")
                        ],
                        storageKey: "node(id:\"bar\")",
                        plural: false,
                        selections: [
                            .field(NormalizationScalarField(
                                name: "__typename"
                            )),
                            .field(NormalizationScalarField(
                                name: "id"
                            )),
                            .inlineFragment(NormalizationInlineFragment(
                                type: "Category",
                                selections: [
                                    .field(NormalizationScalarField(
                                        name: "name"
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]
            ),
            params: RequestParameters(
                name: "LeaderboardHeaderPreviewQuery",
                operationKind: .query,
                text: """
query LeaderboardHeaderPreviewQuery {
  game(id: "foo") {
    ...LeaderboardHeader_game
    id
  }
  category: node(id: "bar") {
    __typename
    ...LeaderboardHeader_category
    id
  }
}

fragment LeaderboardHeader_category on Category {
  name
}

fragment LeaderboardHeader_game on Game {
  name
  cover: asset(kind: COVER_MEDIUM) {
    uri
  }
}
"""
            )
        )
    }
}

extension LeaderboardHeaderPreviewQuery {
    public typealias Variables = EmptyVariables
}



extension LeaderboardHeaderPreviewQuery {
    public struct Data: Decodable {
        public var game: Game_game?
        public var category: Node_category?

        public struct Game_game: Decodable, LeaderboardHeader_game_Key {
            public var fragment_LeaderboardHeader_game: FragmentPointer
        }

        public struct Node_category: Decodable, LeaderboardHeader_category_Key {
            public var fragment_LeaderboardHeader_category: FragmentPointer
        }
    }
}

extension LeaderboardHeaderPreviewQuery: Relay.Operation {}